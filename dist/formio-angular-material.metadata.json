{"__symbolic":"module","version":4,"metadata":{"ɵa":"\n  <mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\"></mat-formio-form-field>\n  <ng-template #componentTemplate let-hasLabel>\n    <mat-form-field [appearance]=\"getFormFieldAppearance()\" fxFill>\n\n      <mat-label *ngIf=\"hasLabel\">\n          <span [instance]=\"instance\" matFormioLabel></span>\n      </mat-label>\n\n      <span *ngIf=\"instance.component.prefix && instance.type !== 'currency'\"\n            matPrefix\n      >\n        {{ instance.component.prefix }}&nbsp;\n      </span>\n      <input matInput\n            type=\"{{ inputType }}\"\n            [formControl]=\"control\"\n            [placeholder]=\"instance.component.placeholder\"\n            (input)=\"onChange()\" #input\n      >\n      <span *ngIf=\"instance.component.suffix\" matSuffix>{{ instance.component.suffix }}</span>\n\n      <mat-hint *ngIf=\"instance.component.showWordCount || instance.component.showCharCount\">\n        {{ getHint() }}\n      </mat-hint>\n\n      <br/>\n      <mat-error *ngIf=\"isError()\" >{{ getErrorMessage() }}</mat-error>\n    </mat-form-field>\n  </ng-template>\n","FormioComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@formio/angular","name":"FormioBaseComponent","line":45,"character":37},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"mat-formio","styles":[".alert-danger {\n      color: #721c24;\n      background-color: #f8d7da;\n      border-color: #f5c6cb;\n    }\n    .alert-success {\n      color: #155724;\n      background-color: #d4edda;\n      border-color: #c3e6cb;\n    }\n    .alert {\n      position: relative;\n      padding: .75rem 1.25rem;\n      margin-bottom: 0.5rem;\n      border: 1px solid transparent;\n      border-radius: .25rem;\n    }\n    ::ng-deep mat-card {\n        box-sizing: border-box;\n        -moz-box-sizing: border-box;\n    }\n    "],"template":"\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <div *ngIf=\"!this.options?.disableAlerts\">\n      <div *ngFor=\"let alert of alerts.alerts\"\n           class=\"alert alert-{{ alert.type }}\"\n           role=\"alert\"\n      >\n        {{ alert.message }}\n      </div>\n    </div>\n    <div fxLayout=\"column\" fxLayoutGap=\"1em\">\n      <ng-template #formio></ng-template>\n    </div>\n  "}]}],"members":{"formioViewContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":46,"character":3},"arguments":["formio",{"static":true,"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":46,"character":44}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":51,"character":5}}]],"parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":48,"character":22},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":49,"character":16},{"__symbolic":"reference","module":"@angular/core","name":"NgZone","line":50,"character":19},{"__symbolic":"reference","module":"@formio/angular","name":"FormioAppConfig","line":51,"character":31}]}],"getRendererOptions":[{"__symbolic":"method"}],"createRenderer":[{"__symbolic":"method"}]}},"MaterialButtonComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"mat-formio-button","template":"<button *ngIf=\"instance\"\n        [ngClass]=\"buttonClass\"\n        type=\"{{ instance.component.action }}\"\n        mat-raised-button [color]=\"color\"\n        [disabled]=\"disabled\"\n        (click)=\"instance.onClick($event)\"\n>\n  <mat-icon *ngIf=\"instance.component.leftIcon\">{{instance.component.leftIcon}}</mat-icon>\n  <mat-icon *ngIf=\"done\">done</mat-icon>\n  <mat-icon *ngIf=\"error\">close</mat-icon>\n  <mat-icon class=\"mat-icon-spin\" *ngIf=\"loading\">autorenew</mat-icon>\n  {{ instance.component.label }}\n  <mat-icon *ngIf=\"instance.component.rightIcon\">{{instance.component.rightIcon}}</mat-icon>\n</button>\n","styles":["@-webkit-keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}:host .mat-icon-spin{-webkit-animation-duration:1s;-webkit-animation-iteration-count:infinite;-webkit-animation-name:spin;-webkit-animation-timing-function:linear;animation-duration:1s;animation-iteration-count:infinite;animation-name:spin;animation-timing-function:linear}.mat-formio-theme-success{background-color:#63d644!important}.mat-formio-theme-info{background-color:#49d9f4!important}.mat-formio-button-sm{font-size:14px;padding:8px 12px}.mat-formio-button-xs{font-size:14px;padding:4px 6px}.mat-formio-button-md{font-size:15px;padding:8px 12px}.mat-formio-button-lg{font-size:19px;padding:16px 20px}.mat-formio-button-block{display:block;width:100%}"]}]}],"members":{"onClick":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}],"setState":[{"__symbolic":"method"}],"getIconFontSet":[{"__symbolic":"method"}],"getIconName":[{"__symbolic":"method"}],"setInstance":[{"__symbolic":"method"}]}},"MaterialTextfieldComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":36,"character":1},"arguments":[{"selector":"mat-formio-textfield","template":{"__symbolic":"reference","name":"ɵa"}}]}],"members":{"ngAfterContentInit":[{"__symbolic":"method"}],"getHint":[{"__symbolic":"method"}],"getWordsCount":[{"__symbolic":"method"}],"getFormFieldAppearance":[{"__symbolic":"method"}],"isError":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}]}},"MaterialPasswordComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialTextfieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-password","template":{"__symbolic":"reference","name":"ɵa"}}]}],"members":{}},"MaterialUrlComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialTextfieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-url","template":{"__symbolic":"reference","name":"ɵa"}}]}],"members":{}},"MaterialEmailComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialTextfieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-email","template":{"__symbolic":"reference","name":"ɵa"}}]}],"members":{}},"MaterialPhoneNumberComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialTextfieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-phonenumber","template":{"__symbolic":"reference","name":"ɵa"}}]}],"members":{}},"MaterialNumberComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialTextfieldComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"mat-formio-number","template":{"__symbolic":"reference","name":"ɵa"}}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":12,"character":30},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":12,"character":54},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":12,"character":91}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"MaterialCurrencyComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNumberComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"mat-formio-currency","template":{"__symbolic":"reference","name":"ɵa"}}]}],"members":{"onChange":[{"__symbolic":"method"}]}},"MaterialDayComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"mat-formio-day","template":"\n    <mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\"></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <mat-label *ngIf=\"hasLabel\">\n        <span [instance]=\"instance\" matFormioLabel></span>\n      </mat-label>\n      <mat-form-field *ngIf=\"instance.dayFirst && instance.showDay\">\n        <mat-label *ngIf=\"!instance.component.hideInputLabels\">Day</mat-label>\n        <mat-select [formControl]=\"dayControl\" (selectionChange)=\"onChange()\" [required]=\"instance.dayRequired\">\n          <mat-option *ngFor=\"let day of instance.days\" [value]=\"day.value\">\n            {{day.label}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field *ngIf=\"instance.showMonth\">\n        <mat-label *ngIf=\"!instance.component.hideInputLabels\">Month</mat-label>\n        <mat-select [formControl]=\"monthControl\" (selectionChange)=\"onChange()\" [required]=\"instance.monthRequired\">\n          <mat-option *ngFor=\"let month of instance.months\" [value]=\"month.value\">\n            {{month.label}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field *ngIf=\"!instance.dayFirst && instance.showDay\">\n        <mat-label *ngIf=\"!instance.component.hideInputLabels\">Day</mat-label>\n        <mat-select [formControl]=\"dayControl\" (selectionChange)=\"onChange()\" [required]=\"instance.dayRequired\">\n          <mat-option *ngFor=\"let day of instance.days\" [value]=\"day.value\">\n            {{day.label}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field *ngIf=\"instance.showYear\">\n        <mat-label *ngIf=\"!instance.component.hideInputLabels\">Year</mat-label>\n        <mat-select [formControl]=\"yearControl\" (selectionChange)=\"onChange()\" [required]=\"instance.yearRequired\">\n          <mat-option *ngFor=\"let year of instance.years\" [value]=\"year.value\">\n            {{year.label}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-error *ngIf=\"instance.error\">{{ instance.error.message }}</mat-error>\n    </ng-template>\n  "}]}],"members":{"setInstance":[{"__symbolic":"method"}],"setDisabled":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}]}},"MaterialHiddenComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-hidden","template":"<input matInput type=\"hidden\" [formControl]=\"control\" #input>"}]}],"members":{}},"MaterialHtmlComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"mat-formio-html","template":"<div #htmlBody></div>"}]}],"members":{"htmlBody":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":9,"character":3},"arguments":["htmlBody"]}]}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"MaterialTagsComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"mat-formio-tags","template":"\n    <mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\"></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <mat-form-field class=\"example-chip-list\" fxFill>\n\n        <mat-label *ngIf=\"hasLabel\">\n          <span [instance]=\"instance\" matFormioLabel></span>\n        </mat-label>\n\n        <mat-chip-list #chipList [attr.aria-label]=\"instance.component.label\">\n          <mat-chip *ngFor=\"let tag of tags; index as i;\"\n                    [selectable]=\"true\"\n                    [removable]=\"true\"\n                    (removed)=\"remove(i)\"\n          >\n            {{tag}}\n            <mat-icon matChipRemove>cancel</mat-icon>\n          </mat-chip>\n\n          <input [formControl]=\"control\"\n                 [matChipInputFor]=\"chipList\"\n                 [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                 [matChipInputAddOnBlur]=\"true\"\n                 (matChipInputTokenEnd)=\"add($event)\"\n          >\n        </mat-chip-list>\n      </mat-form-field>\n    </ng-template>\n  "}]}],"members":{"add":[{"__symbolic":"method"}],"remove":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}]}},"MaterialTableComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"mat-formio-table","template":"\n      <table class=\"mat-table\" style=\"width: 100%;\" [ngClass]=\"{'is-bordered' : instance.component.bordered}\">\n        <thead>\n        <tr class=\"mat-header-row\">\n          <th *ngFor=\"let header of instance.component.header\"\n              class=\"mat-header-cell\"\n          >\n            {{ instance.t(header) }}\n          </th>\n        </tr>\n        </thead>\n\n        <tbody>\n        <tr *ngFor=\"let row of instance.table; let i = index\"\n            role=\"row\"\n            class=\"mat-row\"\n            [ngClass]=\"{\n                'is-hover': instance.component.hover,\n                'is-striped': instance.component.striped && i % 2 === 0\n              }\"\n        >\n          <td *ngFor=\"let col of row\"\n              role=\"gridcell\"\n              class=\"mat-cell\"\n              [ngClass]=\"getTableColClasses()\"\n          >\n            <ng-template #components></ng-template>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n  ","styles":[".mat-table.is-bordered{border:1px solid #ddd}.mat-row.is-hover:hover{background-color:#f5f5f5}.mat-cell{padding:8px}.mat-cell.is-condensed{padding:3px}.mat-row.is-striped{background-color:#eee}.mat-cell.center{text-align:center}.mat-cell.right{text-align:right}"]}]}],"members":{"setInstance":[{"__symbolic":"method"}],"getTableColClasses":[{"__symbolic":"method"}]}},"MaterialTextareaComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"mat-formio-textarea","template":"\n    <mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\"></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <mat-form-field class=\"mat-formio-textarea\"\n                      [ngClass]=\"{'editor-enabled': !!instance.component.editor}\"\n                      fxFill\n                      fxFlexAlign=\"center\"\n      >\n        <mat-label fxFill *ngIf=\"hasLabel\">\n          <span [instance]=\"instance\" matFormioLabel></span>\n        </mat-label>\n        <span *ngIf=\"instance.component.prefix\" matPrefix>{{ instance.component.prefix }}&nbsp;</span>\n        <textarea matInput\n                  [placeholder]=\"instance.component.placeholder\"\n                  [formControl]=\"control\"\n                  [rows]=\"(instance.component.rows || 3)\"\n                  (input)=\"onChange()\"\n                   #textarea\n        >\n        </textarea>\n        <span *ngIf=\"instance.component.suffix\" matSuffix>{{ instance.component.suffix }}</span>\n        <mat-error *ngIf=\"instance.error\">{{ instance.error.message }}</mat-error>\n      </mat-form-field>\n    </ng-template>\n  ","styles":[".mat-input-element{min-height:16px}"]}]}],"members":{"textarea":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":35,"character":3},"arguments":["textarea"]}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}]}},"MaterialColumnsComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"mat-formio-columns","template":"\n    <div class=\"container\"\n         fxLayout=\"row\"\n         fxLayout.xs=\"column\"\n         fxLayoutWrap\n         fxLayoutGap=\"{{ flexGap }}%\"\n         fxLayoutAlign=\"center\"\n    >\n      <div\n        *ngFor=\"let column of instance.component.columns; let i = index\"\n        [fxFlex]=\"flexWidth(column, i)\"\n        fxLayout=\"column\"\n        fxLayoutGap=\"1em\">\n        <ng-template #components></ng-template>\n      </div>\n    </div>\n  ","styles":[]}]}],"members":{"setInstance":[{"__symbolic":"method"}],"flexWidth":[{"__symbolic":"method"}]}},"MaterialContainerComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-container","template":"\n    <div fxLayout=\"column\" fxLayoutGap=\"1em\">\n      <ng-template #components></ng-template>\n    </div>"}]}],"members":{}},"MaterialDataGridComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"mat-formio-datagrid","template":"\n    <mat-formio-form-field [instance]=\"instance\"\n                           [componentTemplate]=\"componentTemplate\"\n                           [labelTemplate]=\"labelTemplate\"\n    ></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <mat-card fxFill>\n        <ng-container *ngIf=\"hasLabel\">\n          <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n        </ng-container>\n        <mat-card-content>\n          <mat-card-actions\n                  *ngIf=\"instance.hasAddButton() && (instance.component.addAnotherPosition === 'both' || instance.component.addAnotherPosition === 'top')\">\n            <button mat-raised-button color=\"primary\" (click)=\"addAnother()\">\n              <mat-icon>add</mat-icon>\n              {{instance.component.addAnother || 'Add Another'}}\n            </button>\n          </mat-card-actions>\n          <table\n                  mat-table\n                  [dataSource]=\"dataSource\"\n                  class=\"mat-elevation-z8\"\n                  fxFill\n                  cdkDropList\n                  [cdkDropListData]=\"dataSource\"\n                  (cdkDropListDropped)=\"dropTable($event)\">\n            >\n            <ng-container *ngFor=\"let column of formColumns\" [matColumnDef]=\"column\">\n              <th mat-header-cell *matHeaderCellDef>{{ getColumnLabel(columns[column]) }}</th>\n              <td mat-cell *matCellDef=\"let i = index;\" [attr.rowIndex]=\"i\" [attr.component]=\"column\">\n                <ng-template #components></ng-template>\n              </td>\n            </ng-container>\n            <ng-container matColumnDef=\"__removeRow\">\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td mat-cell *matCellDef=\"let i = index;\">\n                <button mat-button *ngIf=\"instance.hasRemoveButtons()\" (click)=\"removeRow(i)\">\n                  <mat-icon aria-hidden=\"false\" aria-label=\"Remove row\">delete</mat-icon>\n                </button>\n              </td>\n            </ng-container>\n            <ng-container matColumnDef=\"position\" *ngIf=\"instance.component.reorder\">\n              <th mat-header-cell *matHeaderCellDef> No.</th>\n              <td mat-cell *matCellDef=\"let element\">\n                <mat-icon cdkDragHandle>reorder</mat-icon>\n              </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <div *ngIf=\"instance?.component?.reorder\">\n              <tr class=\"datagrid-row\" mat-row *matRowDef=\"let row; columns: displayedColumns;\" cdkDrag\n                  [cdkDragData]=\"row\"></tr>\n            </div>\n            <div *ngIf=\"!instance?.component?.reorder\">\n              <tr class=\"datagrid-row\" mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </div>\n          </table>\n        </mat-card-content>\n        <mat-card-actions *ngIf=\"instance.hasAddButton() && instance.component.addAnotherPosition !== 'top'\">\n          <button mat-raised-button color=\"primary\" (click)=\"addAnother()\">\n            <mat-icon>add</mat-icon>\n            {{instance.component.addAnother || 'Add Another'}}\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </ng-template>\n\n    <ng-template #labelTemplate>\n      <mat-card-title>\n        <span [instance]=\"instance\" matFormioLabel></span>\n      </mat-card-title>\n    </ng-template>\n  ","styles":[".datagrid-row { height: auto; }"]}]}],"members":{"getColumnLabel":[{"__symbolic":"method"}],"setInstance":[{"__symbolic":"method"}],"addAnother":[{"__symbolic":"method"}],"checkRowsNumber":[{"__symbolic":"method"}],"removeRow":[{"__symbolic":"method"}],"dropTable":[{"__symbolic":"method"}],"renderComponents":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}]}},"MaterialEditGridComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":85,"character":1},"arguments":[{"selector":"mat-formio-editgrid","template":"<mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\" [labelTemplate]=\"labelTemplate\">\n</mat-formio-form-field>\n<ng-template #componentTemplate let-hasLabel>\n\n  <span fxLayout=\"column\" fxLayoutGap=\"1em\" fxFill>\n    <ng-container *ngIf=\"hasLabel\">\n      <ng-container *ngTemplateOutlet=\"labelTemplate\"></ng-container>\n    </ng-container>\n    <mat-accordion>\n      <mat-expansion-panel *ngIf=\"header\" disabled=\"true\">\n        <mat-expansion-panel-header>\n          <span #header fxFill></span>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel *ngFor=\"let row of instance.editRows; index as i;\" [expanded]=\"instance.isOpen(row)\">\n        <mat-expansion-panel-header (click)=\"editRow(row, i)\">\n          <span *ngIf=\"row.state !== RowStates.NEW\" #rows fxFill></span>\n        </mat-expansion-panel-header>\n\n        <mat-formio [form]=\"instance.component\" #forms (change)=\"validate(i)\"></mat-formio>\n\n        <span fxLayout=\"row\" fxLayoutGap=\"1em\">\n          <button mat-raised-button color=\"primary\" [disabled]=\"!valid\" (click)=\"saveRow(row, i)\">Save</button>\n          <button mat-raised-button color=\"secondary\" (click)=\"cancelRow(i)\">Cancel</button>\n          <button mat-raised-button color=\"warn\" (click)=\"instance.removeRow(i)\" class=\"delete-button\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </span>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel *ngIf=\"footer\" disabled=\"true\">\n        <mat-expansion-panel-header>\n          <span #footer></span>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n    </mat-accordion>\n\n    <span fxFill=\"none\" *ngIf=\"instance.hasAddButton()\">\n      <button mat-raised-button color=\"primary\" (click)=\"addAnother()\">\n        <mat-icon>add</mat-icon> Add Another\n      </button>\n    </span>\n  </span>\n</ng-template>\n\n<ng-template #labelTemplate>\n  <mat-card-title>\n    <span [instance]=\"instance\" matFormioLabel></span>\n  </mat-card-title>\n</ng-template>\n","styles":[":host .delete-button{margin-left:auto;order:2}"]}]}],"members":{"headerElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":91,"character":3},"arguments":["header"]}]}],"footerElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":92,"character":3},"arguments":["footer"]}]}],"rowElements":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":93,"character":3},"arguments":["rows"]}]}],"forms":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":94,"character":3},"arguments":["forms"]}]}],"getRowTemplate":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}],"setInstance":[{"__symbolic":"method"}],"addAnother":[{"__symbolic":"method"}],"editRow":[{"__symbolic":"method"}],"updateRowTemplate":[{"__symbolic":"method"}],"saveRow":[{"__symbolic":"method"}],"cancelRow":[{"__symbolic":"method"}],"renderTemplate":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"MaterialPanelComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-panel","template":"\n    <mat-card *ngIf=\"!instance.component.collapsible\">\n      <mat-card-title *ngIf=\"instance?.component?.title\">\n        {{ instance.component.title }}\n      </mat-card-title>\n      <mat-card-content fxLayout=\"column\" fxLayoutGap=\"1em\">\n        <ng-template #components></ng-template>\n      </mat-card-content>\n    </mat-card>\n    <mat-expansion-panel *ngIf=\"instance.component.collapsible\"\n                         [expanded]=\"!instance.component.collapsed\"\n    >\n      <mat-expansion-panel-header *ngIf=\"instance?.component?.title\">\n        <mat-panel-title>\n          {{ instance.component.title }}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <ng-template #components></ng-template>\n    </mat-expansion-panel>\n  ","styles":[":host { margin-bottom: 1em; }"]}]}],"members":{}},"MaterialCheckboxComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"mat-formio-checkbox","template":"\n    <mat-checkbox (change)=\"onChange()\" [ngClass]=\"{'validation-error' : !!instance.error}\"\n                  [formControl]=\"control\"\n    >\n      <span matFormioLabel [instance]=\"instance\"></span>\n      <mat-icon *ngIf=\"instance.component.tooltip\" matSuffix\n                matTooltip=\"{{ instance.component.tooltip }}\" style=\"font-size: 1rem;\">info\n      </mat-icon>\n    </mat-checkbox>\n    <mat-hint>\n      {{ instance.component.description  }}\n    </mat-hint>\n    <mat-error *ngIf=\"instance.error\">{{ instance.error.message }}</mat-error>\n  ","styles":["::ng-deep .mat-checkbox.validation-error .mat-checkbox-frame {border-color: red; }"]}]}],"members":{"getValue":[{"__symbolic":"method"}]}},"MaterialFieldsetComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-fieldset","template":"\n    <fieldset>\n      <legend [attr.ref]=\"'header'\">\n        {{ instance.component.legend }}\n        <mat-icon *ngIf=\"instance.component.tooltip\"\n                  matSuffix\n                  matTooltip=\"{{ instance.component.tooltip }}\"\n        >\n          info\n        </mat-icon>\n      </legend>\n      <div class=\"fieldset-body\" [attr.ref]=\"instance.component.key\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n        <ng-template #components></ng-template>\n      </div>\n    </fieldset>\n  ","styles":[]}]}],"members":{}},"MaterialContentComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-content","template":"<div [innerHTML]=\"instance.content\"></div>"}]}],"members":{}},"MaterialSignatureComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-signature","template":"\n    <mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\"></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <div #signature>\n\n        <mat-label *ngIf=\"hasLabel\">\n          <span [instance]=\"instance\" matFormioLabel></span>\n        </mat-label>\n\n        <button mat-icon-button [ngStyle]=\"{position: 'absolute'}\" ref=\"refresh\">\n          <mat-icon>refresh</mat-icon>\n        </button>\n\n        <div class=\"signature-pad-body\"\n             [ngStyle]=\"{width: instance.component.width, height: instance.component.height, padding: 0, margin: 0}\"\n             [attr.tabindex]=\"instance.component.tabindex || 0\"\n             ref=\"padBody\"\n        >\n          <canvas class=\"signature-pad-canvas\"\n                  [attr.height]=\"instance.component.height\"\n                  ref=\"canvas\"\n          ></canvas>\n          <img fxFlexFill [ngStyle]=\"{display: 'none' }\" ref=\"signatureImage\">\n        </div>\n        <div *ngIf=\"instance.component.footer\"\n             class=\"signature-pad-footer\"\n             fxLayout=\"row\"\n             fxLayoutAlign=\"center center\"\n        >\n          <mat-hint>{{ instance.t(instance.component.footer) }}</mat-hint>\n        </div>\n      </div>\n    </ng-template>\n  "}]}],"members":{"signatureElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":41,"character":3},"arguments":["signature"]}]}],"renderComponents":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"MaterialSurveyComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"mat-formio-survey","template":"\n\n      <mat-formio-form-field\n              [instance]=\"instance\"\n              [componentTemplate]=\"componentTemplate\"\n              [showDescription]=\"false\"\n      ></mat-formio-form-field>\n      <ng-template #componentTemplate let-hasLabel>\n\n        <table class=\"mat-elevation-z8 mat-table\" fxFill>\n          <thead>\n          <tr class=\"mat-header-row\">\n            <th class=\"mat-header-cell\">\n              <h2 *ngIf=\"hasLabel\">\n                <span [instance]=\"instance\" matFormioLabel></span>\n              </h2>\n            </th>\n            <th class=\"mat-header-cell\"\n                *ngFor=\"let value of instance.component.values\"\n                style=\"text-align: center;\"\n            >\n              {{ value.label }}\n            </th>\n          </tr>\n          </thead>\n\n          <tbody>\n          <tr class=\"mat-row\" *ngFor=\"let question of instance.component.questions; index as i;\">\n            <td class=\"mat-cell\">{{ question.label }}</td>\n            <td class=\"mat-cell\"\n                *ngFor=\"let value of instance.component.values; index as j;\"\n                style=\"text-align: center;\"\n            >\n              <mat-radio-group (change)=\"onChange()\"\n                               [formControl]=\"getFormControl(question.value)\"\n                               [name]=\"getUniqueName(question.value)\"\n              >\n                <mat-radio-button [value]=\"value.value\"></mat-radio-button>\n              </mat-radio-group>\n            </td>\n          </tr>\n          <mat-hint *ngIf=\"instance.component.description\" class=\"mat-formio-component-description\">\n            {{ instance.component.description }}\n          </mat-hint>\n          </tbody>\n\n          <mat-error *ngIf=\"instance.error\">{{ instance.error.message }}</mat-error>\n        </table>\n      </ng-template>\n    "}]}],"members":{"getFormControl":[{"__symbolic":"method"}],"setDisabled":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"getUniqueName":[{"__symbolic":"method"}]}},"MaterialSelectBoxesComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialRadioComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-selectboxes","template":"\n    <mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\"></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <div fxLayout=\"column\">\n        <mat-label *ngIf=\"hasLabel\">\n          <span [instance]=\"instance\" matFormioLabel></span>\n        </mat-label>\n        <div\n                fxFlexOffset=\"10px\"\n                fxLayout=\"{{ getLayout() }}\"\n                fxLayoutGap=\"10px\"\n        >\n          <mat-checkbox\n                  *ngFor=\"let option of instance.component.values\"\n                  (change)=\"onChange()\"\n                  [(ngModel)]=\"value[option.value]\"\n                  [disabled]=\"disabled\"\n          >\n            {{ option.label }}\n          </mat-checkbox>\n          <mat-error *ngIf=\"instance.error\">{{ instance.error.message }}</mat-error>\n        </div>\n      </div>\n    </ng-template>\n  "}]}],"members":{"setInstance":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"setDisabled":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"MaterialRadioComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"mat-formio-radio","template":"\n    <mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\"></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <div fxLayout=\"column\">\n        <mat-label *ngIf=\"hasLabel\">\n          <span [instance]=\"instance\" matFormioLabel></span>\n        </mat-label>\n\n        <mat-radio-group\n                (change)=\"onChange()\"\n                [formControl]=\"control\"\n                fxFlexOffset=\"10px\"\n                fxLayout=\"{{ getLayout() }}\"\n                fxLayoutGap=\"10px\"\n        >\n          <mat-radio-button *ngFor=\"let option of instance.component.values\"\n                            value=\"{{ option.value }}\"\n                            [checked]=\"isRadioChecked(option)\"\n                            (keyup.space)=\"clearValue($event, option)\"\n                            (click)=\"clearValue($event, option)\"\n          >\n            {{ option.label }}\n          </mat-radio-button>\n          <mat-error *ngIf=\"instance.error\">{{ instance.error.message }}</mat-error>\n        </mat-radio-group>\n      </div>\n    </ng-template>\n  "}]}],"members":{"getLayout":[{"__symbolic":"method"}],"isRadioChecked":[{"__symbolic":"method"}],"clearValue":[{"__symbolic":"method"}],"deselectValue":[{"__symbolic":"method"}]}},"MaterialSelectComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"mat-formio-select","template":"\n    <mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\"></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <mat-form-field fxFill>\n\n        <mat-label *ngIf=\"hasLabel\">\n          <span [instance]=\"instance\" matFormioLabel></span>\n        </mat-label>\n\n        <span *ngIf=\"instance.component.prefix\" matPrefix>\n          {{ instance.component.prefix }}&nbsp;\n        </span>\n        <mat-select\n                [multiple]=\"instance.component.multiple\"\n                [formControl]=\"control\"\n                [placeholder]=\"instance.component.placeholder\"\n                (selectionChange)=\"onChange()\"\n                [compareWith]=\"compareObjects\"\n        >\n          <div class=\"mat-option\">\n            <input class=\"mat-input-element\" placeholder=\"Type to search\" (input)=\"onFilter($event.target.value)\">\n          </div>\n          <mat-option *ngIf=\"!filteredOptionsLength\" disabled>\n            <span>Nothing was found</span>\n          </mat-option>\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.value\">\n            <span [innerHTML]=\"option.label\"></span>\n          </mat-option>\n        </mat-select>\n\n        <span *ngIf=\"instance.component.suffix\" matSuffix>\n          {{ instance.component.suffix }}\n        </span>\n        <mat-error *ngIf=\"instance.error\">{{ instance.error.message }}</mat-error>\n      </mat-form-field>\n    </ng-template>\n  "}]}],"members":{"setInstance":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"onFilter":[{"__symbolic":"method"}],"compareObjects":[{"__symbolic":"method"}]}},"MaterialTabsComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"mat-formio-tabs","template":"\n    <mat-tab-group>\n      <mat-tab *ngFor=\"let tab of instance.component.components\" [label]=\"tab.label\">\n        <div fxLayout=\"column\" fxLayoutGap=\"1em\" style=\"border: 1px dotted rgba(0, 0, 0, 0.125)\">\n          <ng-template #components></ng-template>\n        </div>\n      </mat-tab>\n    </mat-tab-group>\n  "}]}],"members":{"setInstance":[{"__symbolic":"method"}]}},"MaterialDateComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"mat-formio-date","host":{"(document:click)":"clickOutside($event)","$quoted$":["(document:click)"]},"template":"\n    <mat-formio-form-field [instance]=\"instance\" [componentTemplate]=\"componentTemplate\"></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <mat-label *ngIf=\"hasLabel\" fxFill>\n        <span [instance]=\"instance\" matFormioLabel></span>\n      </mat-label>\n\n      <form class=\"example-form\">\n        <mat-datepicker-toggle [disabled]=\"isDisabled()\" (click)=\"toggleCalendar($event)\">\n          <mat-icon matDatepickerToggleIcon *ngIf=\"enableTime && !enableDate\">schedule</mat-icon>\n        </mat-datepicker-toggle>\n        <mat-form-field class=\"example-full-width\">\n          <input\n            *ngIf=\"enableTime && enableDate\"\n            matInput\n            type=\"datetime-local\"\n            [placeholder]=\"instance.component.placeholder\"\n            [formControl]=\"displayControl\"\n            (input)=\"onChangeInput()\"\n            [readonly]=\"!allowManualInput\"\n          >\n          <input\n            *ngIf=\"enableTime && !enableDate\"\n            matInput\n            [placeholder]=\"instance.component.placeholder\"\n            [formControl]=\"displayControl\"\n            [matMask]=\"formatTime\"\n            (input)=\"onChangeInput()\"\n            [readonly]=\"!allowManualInput\"\n          >\n          <input\n            *ngIf=\"!enableTime && enableDate\"\n            matInput\n            [placeholder]=\"instance.component.placeholder\"\n            [formControl]=\"displayControl\"\n            (input)=\"onChangeInput()\"\n            [readonly]=\"!allowManualInput\"\n          >\n        </mat-form-field>\n\n        <mat-formio-calendar\n          #calendar\n          [minDate]=\"instance.component.datePicker.minDate || ''\"\n          [maxDate]=\"instance.component.datePicker.maxDate || ''\"\n          [dateFilter]=\"dateFilter\"\n          [hidden]=\"!isPickerOpened\"\n          (dateSelectEvent)=\"onChangeDate($event)\"\n          (timeSelectEvent)=\"onChangeTime($event)\"\n          [enableDate]=\"enableDate\"\n          [enableTime]=\"enableTime\"\n          [hourStep]=\"instance.component.timePicker.hourStep\"\n          [minuteStep]=\"instance.component.timePicker.minuteStep\"\n          [instance]=\"instance\"\n        ></mat-formio-calendar>\n        <mat-error *ngIf=\"instance.error\">{{ instance.error.message }}</mat-error>\n      </form>\n    </ng-template>\n  "}]}],"members":{"calendar":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":78,"character":3},"arguments":["calendar"]}]}],"setDisplayControlValue":[{"__symbolic":"method"}],"onChangeDate":[{"__symbolic":"method"}],"onChangeTime":[{"__symbolic":"method"}],"onChangeInput":[{"__symbolic":"method"}],"getDateTimeValue":[{"__symbolic":"method"}],"setDateTime":[{"__symbolic":"method"}],"setInstance":[{"__symbolic":"method"}],"toggleCalendar":[{"__symbolic":"method"}],"isDisabled":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"beforeSubmit":[{"__symbolic":"method"}],"checkMinMax":[{"__symbolic":"method"}],"disableWeekends":[{"__symbolic":"method"}],"disableDates":[{"__symbolic":"method"}],"clickOutside":[{"__symbolic":"method"}],"improveMinMaxDate":[{"__symbolic":"method"}]}},"MaterialWellComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-well","template":"\n    <mat-card>\n      <mat-card-content fxLayout=\"column\"\n                        fxLayoutGap=\"1em\"\n                        [ngStyle]=\"{\n                           'background-color':'#f5f5f5',\n                           'padding': '1.5em'\n                         }\"\n      >\n        <ng-template #components></ng-template>\n      </mat-card-content>\n    </mat-card>\n  ","styles":[]}]}],"members":{}},"MaterialComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"mat-formio-comp","template":"<mat-card>Unknown Component: {{ instance.component.type }}</mat-card>"}]}],"members":{"instance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"input":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":12,"character":3},"arguments":["input"]}]}],"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":14,"character":30},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":14,"character":54}]}],"setInstance":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"validateOnInit":[{"__symbolic":"method"}],"storeFormData":[{"__symbolic":"method"}],"getFormValue":[{"__symbolic":"method"}],"renderComponents":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"beforeSubmit":[{"__symbolic":"method"}],"hasError":[{"__symbolic":"method"}],"shouldValidateOnInit":[{"__symbolic":"method"}],"setDisabled":[{"__symbolic":"method"}],"setVisible":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"MaterialNestedComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-nested","template":"<ng-template #components></ng-template>"}]}],"members":{"components":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":9,"character":3},"arguments":["components",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":9,"character":37}}]}]}],"setInstance":[{"__symbolic":"method"}],"renderComponents":[{"__symbolic":"method"}],"render":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"MaterialTimeComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"mat-formio-time","template":"\n    <mat-formio-form-field\n      [instance]=\"instance\"\n      [componentTemplate]=\"componentTemplate\"\n      [renderElementOnly]=\"renderElementOnly\"\n    ></mat-formio-form-field>\n    <ng-template #componentTemplate let-hasLabel>\n      <mat-label fxFill *ngIf=\"hasLabel\">\n        <span [instance]=\"instance\" matFormioLabel></span>\n      </mat-label>\n\n      <div style=\"display: block\">\n        <div fxLayout=\"row\" fxLayoutGap=\"5%\">\n          <input\n            [formControl]=\"hourControl\"\n            [step]=\"hourStep\"\n            [min]=\"0\"\n            [max]=\"12\"\n            type=\"number\"\n            fxFlex=\"25%\"\n            (input)=\"onChange()\"\n          >\n          <input\n            [formControl]=\"minuteControl\"\n            [step]=\"minuteStep\"\n            [min]=\"0\"\n            [max]=\"59\"\n            type=\"number\"\n            fxFlex=\"25%\"\n            (input)=\"onChange()\"\n          >\n          <input\n            [formControl]=\"secondControl\"\n            [step]=\"secondStep\"\n            [min]=\"0\"\n            [max]=\"59\"\n            type=\"number\"\n            fxFlex=\"25%\"\n            (input)=\"onChange()\"\n            *ngIf=\"instance?.component?.dataFormat === 'HH:mm:ss' ||\n             instance?.component?.dataFormat === 'HH:mm:ss.SSS'\"\n          >\n          <button\n            [disabled]=\"instance?.component?.disabled\"\n            fxFlex=\"25%\"\n            (click)=\"changePeriod()\"\n          >\n            {{period}}\n          </button>\n        </div>\n        <mat-error *ngIf=\"instance.error\">{{ instance.error.message }}</mat-error>\n      </div>\n    </ng-template>\n  "}]}],"members":{"selectedEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":69,"character":3}}]}],"hourStep":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":70,"character":3}}]}],"minuteStep":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":3}}]}],"secondStep":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":72,"character":3}}]}],"renderElementOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":3}}]}],"setDisabled":[{"__symbolic":"method"}],"setInstance":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"getTwentyFourHourTime":[{"__symbolic":"method"}],"changePeriod":[{"__symbolic":"method"}]}},"MatFormioModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":103,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"FormioComponent"},{"__symbolic":"reference","name":"MaterialButtonComponent"},{"__symbolic":"reference","name":"MaterialTextfieldComponent"},{"__symbolic":"reference","name":"MaterialPasswordComponent"},{"__symbolic":"reference","name":"MaterialUrlComponent"},{"__symbolic":"reference","name":"MaterialEmailComponent"},{"__symbolic":"reference","name":"MaterialPhoneNumberComponent"},{"__symbolic":"reference","name":"MaterialNumberComponent"},{"__symbolic":"reference","name":"MaterialCurrencyComponent"},{"__symbolic":"reference","name":"MaterialDayComponent"},{"__symbolic":"reference","name":"MaterialHiddenComponent"},{"__symbolic":"reference","name":"MaterialHtmlComponent"},{"__symbolic":"reference","name":"MaterialTagsComponent"},{"__symbolic":"reference","name":"MaterialTextareaComponent"},{"__symbolic":"reference","name":"MaterialColumnsComponent"},{"__symbolic":"reference","name":"MaterialContainerComponent"},{"__symbolic":"reference","name":"MaterialDataGridComponent"},{"__symbolic":"reference","name":"MaterialEditGridComponent"},{"__symbolic":"reference","name":"MaterialPanelComponent"},{"__symbolic":"reference","name":"MaterialCheckboxComponent"},{"__symbolic":"reference","name":"MaterialFieldsetComponent"},{"__symbolic":"reference","name":"MaterialContentComponent"},{"__symbolic":"reference","name":"MaterialSignatureComponent"},{"__symbolic":"reference","name":"MaterialSurveyComponent"},{"__symbolic":"reference","name":"MaterialSelectBoxesComponent"},{"__symbolic":"reference","name":"MaterialRadioComponent"},{"__symbolic":"reference","name":"MaterialSelectComponent"},{"__symbolic":"reference","name":"MaterialTabsComponent"},{"__symbolic":"reference","name":"MaterialTableComponent"},{"__symbolic":"reference","name":"MaterialDateComponent"},{"__symbolic":"reference","name":"MaterialWellComponent"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"MaterialComponent"},{"__symbolic":"reference","name":"MaterialNestedComponent"},{"__symbolic":"reference","name":"MaterialTimeComponent"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":146,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":147,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":148,"character":4},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":149,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":150,"character":4},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":151,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":152,"character":4},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":153,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":154,"character":4},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":155,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":156,"character":4},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":157,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":158,"character":4},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":159,"character":4},{"__symbolic":"reference","module":"@angular/material/stepper","name":"MatStepperModule","line":160,"character":4},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":161,"character":4},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":162,"character":4},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":163,"character":4},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":164,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":165,"character":4},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":166,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":167,"character":4},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":168,"character":4},{"__symbolic":"reference","module":"@angular/cdk/drag-drop","name":"DragDropModule","line":169,"character":4}],"exports":[{"__symbolic":"reference","name":"FormioComponent"},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":173,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":174,"character":4},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":175,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":176,"character":4},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":177,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":178,"character":4},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":179,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":180,"character":4},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":181,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":182,"character":4},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":183,"character":4},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":184,"character":4},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":185,"character":4},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":186,"character":4},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":187,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":188,"character":4},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":189,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":190,"character":4}],"entryComponents":[{"__symbolic":"reference","name":"MaterialButtonComponent"},{"__symbolic":"reference","name":"MaterialTextfieldComponent"},{"__symbolic":"reference","name":"MaterialPasswordComponent"},{"__symbolic":"reference","name":"MaterialUrlComponent"},{"__symbolic":"reference","name":"MaterialEmailComponent"},{"__symbolic":"reference","name":"MaterialPhoneNumberComponent"},{"__symbolic":"reference","name":"MaterialNumberComponent"},{"__symbolic":"reference","name":"MaterialCurrencyComponent"},{"__symbolic":"reference","name":"MaterialDayComponent"},{"__symbolic":"reference","name":"MaterialHiddenComponent"},{"__symbolic":"reference","name":"MaterialHtmlComponent"},{"__symbolic":"reference","name":"MaterialTagsComponent"},{"__symbolic":"reference","name":"MaterialTextareaComponent"},{"__symbolic":"reference","name":"MaterialColumnsComponent"},{"__symbolic":"reference","name":"MaterialContainerComponent"},{"__symbolic":"reference","name":"MaterialDataGridComponent"},{"__symbolic":"reference","name":"MaterialEditGridComponent"},{"__symbolic":"reference","name":"MaterialPanelComponent"},{"__symbolic":"reference","name":"MaterialCheckboxComponent"},{"__symbolic":"reference","name":"MaterialFieldsetComponent"},{"__symbolic":"reference","name":"MaterialContentComponent"},{"__symbolic":"reference","name":"MaterialSignatureComponent"},{"__symbolic":"reference","name":"MaterialSurveyComponent"},{"__symbolic":"reference","name":"MaterialSelectBoxesComponent"},{"__symbolic":"reference","name":"MaterialRadioComponent"},{"__symbolic":"reference","name":"MaterialSelectComponent"},{"__symbolic":"reference","name":"MaterialTabsComponent"},{"__symbolic":"reference","name":"MaterialTableComponent"},{"__symbolic":"reference","name":"MaterialDateComponent"},{"__symbolic":"reference","name":"MaterialWellComponent"},{"__symbolic":"reference","name":"MaterialComponent"},{"__symbolic":"reference","name":"MaterialNestedComponent"},{"__symbolic":"reference","name":"MaterialTimeComponent"},{"__symbolic":"reference","name":"ɵb"}],"providers":[]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"Components":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"require"},"arguments":["formiojs/components/Components"]},"member":"default"},"Formio":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"require"},"arguments":["formiojs/Formio"]},"member":"default"},"Form":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"require"},"arguments":["formiojs/Form"]},"member":"default"},"Utils":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"require"},"arguments":["formiojs/utils"]},"member":"default"},"initRenderer":{"__symbolic":"function"},"registerComponent":{"__symbolic":"function"},"ɵb":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialNestedComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"mat-formio-wizard","styles":[":host .navigation-button-row { margin-top: 8px; }",":host .navigation-button-row button { margin-right: 8px; }"],"template":"\n    <mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\n      <mat-step *ngFor=\"let page of instance.pages\" [label]=\"page.component.title\">\n        <ng-template #components></ng-template>\n        <div class=\"navigation-button-row\">\n          <button *ngIf=\"instance.hasButton('cancel')\" mat-raised-button (click)=\"resetWizard()\">Cancel</button>\n          <button *ngIf=\"instance.hasButton('previous')\" mat-raised-button color=\"primary\" (click)=\"prevPage()\">Previous</button>\n          <button *ngIf=\"instance.hasButton('next')\" mat-raised-button color=\"primary\" (click)=\"nextPage()\">Next</button>\n          <button *ngIf=\"instance.hasButton('submit')\" mat-raised-button color=\"primary\" (click)=\"submit()\">Submit</button>\n        </div>\n      </mat-step>\n    </mat-horizontal-stepper>"}]}],"members":{"stepper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":26,"character":3},"arguments":["stepper",{"static":true}]}]}],"setInstance":[{"__symbolic":"method"}],"updatePages":[{"__symbolic":"method"}],"resetWizard":[{"__symbolic":"method"}],"nextPage":[{"__symbolic":"method"}],"prevPage":[{"__symbolic":"method"}],"submit":[{"__symbolic":"method"}],"renderComponents":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"MaterialComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"mat-formio-calendar","styles":[".calendar, .formio-time {\n      padding: 16px;\n      background-color: white;\n      box-shadow: 0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12);\n    }\n    .formio-time {\n      display: flex;\n    }\n    "],"template":"\n    <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"0.5%\">\n      <div [ngStyle]=\"getPopupStyles()\">\n        <mat-card style=\"padding: 0;\">\n          <mat-calendar\n                  [dateFilter]=\"dateFilter\"\n                  [maxDate]=\"maxDate\"\n                  [minDate]=\"minDate\"\n                  [selected]=\"selectedDate\"\n                  (selectedChange)=\"onDate($event)\"\n                  class=\"calendar\"\n                  *ngIf=\"enableDate !== false\"\n          >\n          </mat-calendar>\n          <mat-formio-time\n                  #time\n                  [hourStep]=\"hourStep\"\n                  [instance]=\"instance\"\n                  [renderElementOnly]=\"true\"\n                  [minuteStep]=\"minuteStep\"\n                  (selectedEvent)=\"onTime($event)\"\n                  class=\"ml-3 formio-time\"\n                  *ngIf=\"enableTime\"\n          >\n          </mat-formio-time>\n        </mat-card>\n      </div>\n    </div>\n  "}]}],"members":{"time":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":51,"character":3},"arguments":["time"]}]}],"enableDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":3}}]}],"enableTime":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":3}}]}],"minDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":3}}]}],"maxDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":3}}]}],"dateFilter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":3}}]}],"hourStep":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":3}}]}],"minuteStep":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":3}}]}],"timeSelectEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":60,"character":3}}]}],"dateSelectEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":61,"character":3}}]}],"setInstance":[{"__symbolic":"method"}],"setExistedDate":[{"__symbolic":"method"}],"setExistedTime":[{"__symbolic":"method"}],"onDate":[{"__symbolic":"method"}],"onTime":[{"__symbolic":"method"}],"getPopupStyles":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"mat-formio-form-field","template":"<div class=\"mat-formio-component-wrapper\" *ngIf=\"instance && !renderElementOnly\"\n     [ngClass]=\"{\n        'mat-formio-label-right': hasLabel([labelPositions.RIGHT_RIGHT, labelPositions.RIGHT_LEFT]),\n        'mat-formio-label-left': hasLabel([labelPositions.LEFT_LEFT, labelPositions.LEFT_RIGHT])\n     }\"\n>\n  <span *ngIf=\"renderTopLabel && hasLabel([labelPositions.TOP])\"\n        class=\"mat-formio-label\"\n        [ngClass]=\"{\n          'mat-formio-label-align-right': hasLabel([labelPositions.LEFT_RIGHT, labelPositions.RIGHT_RIGHT]),\n          'mat-formio-label-align-left': hasLabel([labelPositions.LEFT_LEFT, labelPositions.RIGHT_LEFT])\n        }\"\n  >\n    <ng-container *ngTemplateOutlet=\"labelTemplate || defaultLabel\"></ng-container>\n  </span>\n\n  <div class=\"mat-formio-component\" *ngTemplateOutlet=\"componentTemplate; context: componentTemplateContext\"></div>\n\n  <span *ngIf=\"hasLabel([\n                          labelPositions.BOTTOM,\n                          labelPositions.RIGHT_RIGHT,\n                          labelPositions.RIGHT_LEFT,\n                          labelPositions.LEFT_LEFT,\n                          labelPositions.LEFT_RIGHT\n                        ])\"\n        class=\"mat-formio-label\"\n        [ngClass]=\"{\n          'mat-formio-label-align-right': hasLabel([labelPositions.LEFT_RIGHT, labelPositions.RIGHT_RIGHT]),\n          'mat-formio-label-align-left': hasLabel([labelPositions.LEFT_LEFT, labelPositions.RIGHT_LEFT])\n        }\"\n  >\n    <ng-container *ngTemplateOutlet=\"labelTemplate || defaultLabel\"></ng-container>\n  </span>\n\n  <mat-hint *ngIf=\"showDescription && instance.component.description\" class=\"mat-formio-component-description\">\n    {{ instance.component.description }}\n  </mat-hint>\n</div>\n\n<div class=\"mat-formio-component-wrapper\" *ngIf=\"renderElementOnly\">\n  <div class=\"mat-formio-component\" *ngTemplateOutlet=\"componentTemplate; context: componentTemplateContext\"></div>\n</div>\n\n<ng-template #defaultLabel>\n  <mat-label>\n    <span style=\"display: block;\"\n          [instance]=\"instance\" matFormioLabel>\n    </span>\n  </mat-label>\n</ng-template>\n","styles":[".mat-formio-component-description{-ms-grid-column:1;-ms-grid-row:2;display:block;grid-area:description}.mat-formio-component-wrapper.mat-formio-label-left>.mat-formio-component-description{-ms-grid-column:2;-ms-grid-row:2}.mat-formio-component{-ms-grid-column:1;-ms-grid-row:1;grid-area:component}.mat-formio-component-wrapper.mat-formio-label-left>.mat-formio-component{-ms-grid-column:2;-ms-grid-row:1}.mat-formio-label{-ms-grid-column:2;-ms-grid-row:1;-ms-grid-row-span:2;grid-area:label}.mat-formio-component-wrapper.mat-formio-label-left>.mat-formio-label{-ms-grid-column:1;-ms-grid-row:1;-ms-grid-row-span:2}.mat-formio-label.mat-formio-label-align-right{margin-left:auto}.mat-formio-label.mat-formio-label-align-left{margin-right:auto}.mat-formio-component-wrapper.mat-formio-label-left,.mat-formio-component-wrapper.mat-formio-label-right{-ms-grid-columns:auto auto;display:-ms-grid;display:grid;grid-column-gap:1em;grid-template-columns:auto auto}.mat-formio-component-wrapper.mat-formio-label-right{grid-template-areas:\"component label\" \"description label\"}.mat-formio-component-wrapper.mat-formio-label-left{grid-template-areas:\"label component\" \"label description\"}"]}]}],"members":{"labelTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"renderTopLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"showDescription":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"renderElementOnly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"instance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3},"arguments":["instance"]}]}],"componentTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"hasLabel":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"span[matFormioLabel]","template":"<ng-container *ngIf=\"instance\">\n  {{ instance.component.label }}<span class=\"required-star\" *ngIf=\"instance.component.validate.required\">*</span>\n  <mat-icon *ngIf=\"instance.component.tooltip\" style=\"font-size: 1rem;\"\n            matTooltip=\"{{ instance.component.tooltip }}\" matSuffix\n  >\n    info\n  </mat-icon>\n</ng-container>\n","styles":[":host{display:block;pointer-events:all}.required-star{color:red;font-size:.8rem;margin-left:.2rem;vertical-align:top}"]}]}],"members":{"instance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":4,"character":1},"arguments":[{"selector":"input[matMask]","providers":[{"provide":{"__symbolic":"reference","module":"@angular/material/input","name":"MAT_INPUT_VALUE_ACCESSOR","line":7,"character":14},"useExisting":{"__symbolic":"reference","name":"ɵf"}},{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":9,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵf"},"multi":true}]}]}],"members":{"format":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3},"arguments":["matMask"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ElementRef","module":"@angular/core","arguments":[{"__symbolic":"error","message":"Could not resolve type","line":19,"character":45,"context":{"typeName":"HTMLInputElement"},"module":"./lib/directives/mask.directive"}]}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3},"arguments":["value"]}]}],"formatValue":[{"__symbolic":"method"}],"_onChange":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}]}}},"origins":{"ɵa":"./lib/components/textfield/textfield.component","FormioComponent":"./lib/formio.component","MaterialButtonComponent":"./lib/components/button/button.component","MaterialTextfieldComponent":"./lib/components/textfield/textfield.component","MaterialPasswordComponent":"./lib/components/password/password.component","MaterialUrlComponent":"./lib/components/url/url.component","MaterialEmailComponent":"./lib/components/email/email.component","MaterialPhoneNumberComponent":"./lib/components/phonenumber/phonenumber.component","MaterialNumberComponent":"./lib/components/number/number.component","MaterialCurrencyComponent":"./lib/components/currency/currency.component","MaterialDayComponent":"./lib/components/day/day.component","MaterialHiddenComponent":"./lib/components/hidden/hidden.component","MaterialHtmlComponent":"./lib/components/html/html.component","MaterialTagsComponent":"./lib/components/tags/tags.component","MaterialTableComponent":"./lib/components/table/table.component","MaterialTextareaComponent":"./lib/components/textarea/textarea.component","MaterialColumnsComponent":"./lib/components/columns/columns.component","MaterialContainerComponent":"./lib/components/container/container.component","MaterialDataGridComponent":"./lib/components/datagrid/datagrid.component","MaterialEditGridComponent":"./lib/components/editgrid/editgrid.component","MaterialPanelComponent":"./lib/components/panel/panel.component","MaterialCheckboxComponent":"./lib/components/checkbox/checkbox.component","MaterialFieldsetComponent":"./lib/components/fieldset/fieldset.component","MaterialContentComponent":"./lib/components/content/content.component","MaterialSignatureComponent":"./lib/components/signature/signature.component","MaterialSurveyComponent":"./lib/components/survey/survey.component","MaterialSelectBoxesComponent":"./lib/components/selectboxes/selectboxes.component","MaterialRadioComponent":"./lib/components/radio/radio.component","MaterialSelectComponent":"./lib/components/select/select.component","MaterialTabsComponent":"./lib/components/tabs/tabs.component","MaterialDateComponent":"./lib/components/date/date.component","MaterialWellComponent":"./lib/components/well/well.component","MaterialComponent":"./lib/components/MaterialComponent","MaterialNestedComponent":"./lib/components/MaterialNestedComponent","MaterialTimeComponent":"./lib/components/time/time.component","MatFormioModule":"./lib/angular-material-formio.module","Components":"./lib/renderer","Formio":"./lib/renderer","Form":"./lib/renderer","Utils":"./lib/renderer","initRenderer":"./lib/renderer","registerComponent":"./lib/components","ɵb":"./lib/components/formio.wizard","ɵc":"./lib/components/calendar/calendar.component","ɵd":"./lib/components/formio-form-field/formio-form-field.component","ɵe":"./lib/components/label/label.component","ɵf":"./lib/directives/mask.directive"},"importAs":"@formio/angular-material"}